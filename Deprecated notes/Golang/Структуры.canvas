{
	"nodes":[
		{"id":"91700ee9b72a9179","type":"group","x":-280,"y":2341,"width":1740,"height":1179,"label":"Методы"},
		{"id":"c1c56a0b3c06dd34","type":"group","x":-280,"y":512,"width":1620,"height":912,"label":"Инициализация экземпляра структуры"},
		{"id":"f42bb32e56652dd0","type":"group","x":-280,"y":1437,"width":1651,"height":889,"label":"Обращение к полям в структуре"},
		{"id":"09c531c2ad446db6","type":"group","x":-280,"y":-40,"width":1530,"height":487,"label":"Обозначение структуры"},
		{"id":"b2148df7958fd250","type":"text","text":"Структура","x":-260,"y":3,"width":250,"height":60},
		{"id":"8f6dcbe3983e2a9f","type":"text","text":"Синтаксис создания структуры","x":340,"y":3,"width":250,"height":60},
		{"id":"be1e7de4c71fd6f8","type":"text","text":"```go\ntype Circle struct {\n\tx, y, r float64\n}\n```","x":660,"y":-20,"width":250,"height":106},
		{"id":"9af66bedd76587c8","type":"text","text":"`type` - ключевое слово для создания нового типа","x":980,"y":-10,"width":250,"height":87},
		{"id":"08685284d6dfd737","type":"text","text":"`Circle` - имя нового типа","x":980,"y":86,"width":250,"height":60},
		{"id":"84a5bb71919aada3","type":"text","text":"Инициализация экземпляра структуры","x":-260,"y":560,"width":250,"height":60},
		{"id":"bce45d70e4f70f90","type":"text","text":"Присваивание полям структуры значения","x":380,"y":1055,"width":250,"height":60},
		{"id":"df0fc993bdde92b9","type":"text","text":"```go\nc := Circle{x: 0, y: 1, r: 2}\n```","x":698,"y":1055,"width":320,"height":60},
		{"id":"d2cbd51c208a2802","type":"text","text":"Тип, содержащий именованные поля","x":35,"y":3,"width":250,"height":60},
		{"id":"ef84ba81022144c6","type":"text","text":"``struct`` - говорит о том, что идет определение структуры и список полей внутри фигурных скобок. Каждое поле имеет имя и тип. Как с функциями, можно сразу объединить поля одного типа","x":980,"y":160,"width":250,"height":267},
		{"id":"afb97154de798ee9","type":"text","text":"Создание переменной/экземпляра структуры возможно несколькими способами","x":60,"y":532,"width":250,"height":117},
		{"id":"b483fa800b26e40d","type":"text","text":"```go\nvar c Circle\n// или\nc := Circle{}\n```","x":380,"y":538,"width":250,"height":106},
		{"id":"6533f4bc06304cdd","type":"text","text":"Как и подобно обычным типам данных, если значений полей нет, то будут равны значениям по умолчанию ","x":35,"y":146,"width":250,"height":147},
		{"id":"2fd140895dba1b48","type":"text","text":"Для создания экземпляра можно использовать функцию `new`","x":700,"y":533,"width":250,"height":117},
		{"id":"71276d863d1cc2fa","type":"text","text":"```go\nc := new(Circle)\n```","x":1020,"y":562,"width":250,"height":60},
		{"id":"58965ed13bba4963","type":"text","text":"Это выделит память для всех полей, присвоит каждому из них нулевое значение и вернет указатель (`*Circle`) ","x":1020,"y":680,"width":250,"height":147},
		{"id":"389eaeb128a4ad7f","type":"text","text":"Указывается наименование структуры, а также в фигурных скобках указывается поле структуры и заданное значение. Поля структуры разделяются запятыми, а значения указываются через двоеточие","x":1070,"y":927,"width":250,"height":316},
		{"id":"6132f00206a729e6","type":"text","text":"```go\nc := Circle{0, 1, 2}\n```","x":731,"y":1300,"width":251,"height":60},
		{"id":"905af5742f6935aa","type":"text","text":"Возможно указание только значений, если известен порядок, в котором структура определена","x":1070,"y":1257,"width":250,"height":147},
		{"id":"c3c6d04e98e35d05","type":"text","text":"Получить доступ к полям структуры можно через точку `.`","x":25,"y":1480,"width":250,"height":87},
		{"id":"208577b0412503b9","type":"text","text":"Поля в структуре","x":-260,"y":1494,"width":250,"height":60},
		{"id":"f93291be26bc80ef","type":"text","text":"```go\nvar c Circle{1,2,3}\nfmt.Print(c.x, c.y, c.r)\nc.x = 10\nc.y = 5\n```","x":320,"y":1457,"width":400,"height":133},
		{"id":"032a9df343439315","type":"text","text":"Создание функции для работы со структурой","x":395,"y":1646,"width":250,"height":60},
		{"id":"942bcbe690059db0","type":"text","text":"```go\nfunc circleArea(c Circle) float64 {\n\treturn math.Pi * c.r * c.r\n}\n```","x":337,"y":1760,"width":366,"height":106},
		{"id":"20231de970730738","type":"text","text":"Вызов функции производится следующим образом","x":756,"y":1769,"width":250,"height":87},
		{"id":"1e0c19a5b970a7d9","type":"text","text":"```go\nfunc circleArea(c *Circle) float64 {\n\treturn math.Pi * c.r * c.r\n}\n```","x":333,"y":2200,"width":374,"height":106},
		{"id":"a8fda7e61c6011d0","type":"text","text":"```go\nc := Circle{0, 0, 5}\nfmt.Println(circleArea(&c))\n```","x":1047,"y":2213,"width":304,"height":80},
		{"id":"2ca394fd65b67097","type":"text","text":"```go\nc := Circle{0, 0, 5}\nfmt.Println(circleArea(c))\n```","x":1047,"y":1773,"width":297,"height":80},
		{"id":"ffdb62c3b0d44def","type":"text","text":"Аргументы в Go внутри функции считаются копиями. Поэтому если нужно изменить данные внутри структуры и работать с \"актуальными\" данными, нужно использовать указатели","x":395,"y":1900,"width":250,"height":267},
		{"id":"021e1e09e3ca017c","type":"text","text":"Изменения при вызове функции","x":756,"y":2223,"width":250,"height":60},
		{"id":"9a7440089208618a","type":"text","text":"Считается функцией \"особого типа\". От функции отличается наличием ресивера/получателя","x":48,"y":2361,"width":250,"height":147},
		{"id":"7ee6458dc409315d","type":"text","text":"Методы","x":-260,"y":2405,"width":250,"height":60},
		{"id":"4629442a8d687ec0","type":"text","text":"```go\nfunc (c *Circle) area() float64 {\n\treturn math.Pi * c.r * c.r\n}\n```","x":360,"y":2382,"width":351,"height":106},
		{"id":"48cfe9bdc85928be","type":"text","text":"Между ключевым словом `func` и именем функции добавлен \"ресивер/получатель\". Получатель похож на параметр - присутствует название и тип, но объявление такой функции позволит вызывать ее следующим образом","x":411,"y":2508,"width":250,"height":316},
		{"id":"6e4cf1c992703870","type":"text","text":"```go\nfmt.Println(c.area())\n```","x":407,"y":2880,"width":258,"height":60},
		{"id":"67fe86a7b3895997","type":"text","text":"Встраиваемые типы внутри структур","x":-260,"y":3640,"width":250,"height":60},
		{"id":"233d16982a422df6","type":"text","text":"Это гораздо проще прочесть, т.к. не нужно добавлять `&` (у методов сразу доступ к указателю). Также, эта функция может быть использована только для одной структуры данных, можно ее просто назвать `area`","x":410,"y":2974,"width":250,"height":292},
		{"id":"2c10321592df20f0","type":"text","text":"```go\ntype Rectangle struct {\n\tx1, y1, x2, y2 float64\n}\n\nfunc (r *Rectangle) area() float64 {\n\tl := distance(r.x1, r.y1, r.x2, r.y2) \n\t// r.x1 - доступ к полю Rectangle. \"r\", потому что ресивер под названием \"r\"\n\tw := distance(r.x1, r.y1, r.x2, r.y2)\n\treturn l * w\n}\n```","x":720,"y":2977,"width":720,"height":286},
		{"id":"9c2637b212cc93ca","type":"text","text":"Вызов из `main`","x":953,"y":3310,"width":250,"height":60},
		{"id":"780ce092f187cc94","type":"text","text":"```go\nr := Rectangle{0, 0, 10, 10}\nfmt.Println(r.area())\n```","x":922,"y":3420,"width":312,"height":80},
		{"id":"d141b7218d54682e","type":"text","text":"Поля структур представляют отношения принадлежности (включения)","x":60,"y":3597,"width":250,"height":147},
		{"id":"4b4ce7577e2a30f0","x":360,"y":3552,"width":540,"height":238,"type":"text","text":"```go\ntype Person struct { // Структура Person\n\tName string // С полем \"name\" и типом данных string\n}\n\ntype Android struct {\n\tPerson // Структура встроена в другую структуру\n\tModel string // С полем \"model\" и типом данных string\n}\n```"},
		{"id":"61043adb880faacc","x":506,"y":3842,"width":250,"height":118,"type":"text","text":"Объявленная структура будет доступна через имя следующим образом"},
		{"id":"70d95cfcbeb1b72f","x":423,"y":4000,"width":417,"height":185,"type":"text","text":"```go\na := new(Android)\na.Person.Talk()\n\nfunc (p *Person) Talk() {\n\tfmt.Printf(\"My name is %v\", p.Name)\n}\n```"},
		{"id":"dea6f0fe2336aba9","x":506,"y":4246,"width":250,"height":60,"type":"text","text":"Можно вызвать любой метод для Person"},
		{"id":"390e099aef40f149","x":506,"y":4339,"width":250,"height":80,"type":"text","text":"```go\na := new(Android)\na.Talk()\n```"},
		{"id":"9b8fe422fcdec3e4","x":953,"y":3628,"width":250,"height":87,"type":"text","text":"Инициализация происходит следующим образом"},
		{"id":"f43789c38fbee61a","x":1260,"y":3576,"width":274,"height":192,"type":"text","text":"```go\na := Android {\n\tPerson: Person {\n\t\tName: \"Daniel\",\n\t},\n\tModel: \"model\",\n}\n```"}
	],
	"edges":[
		{"id":"0addb243fe5c9a8a","fromNode":"b2148df7958fd250","fromSide":"right","toNode":"d2cbd51c208a2802","toSide":"left"},
		{"id":"b165eecde50c4441","fromNode":"d2cbd51c208a2802","fromSide":"right","toNode":"8f6dcbe3983e2a9f","toSide":"left"},
		{"id":"6740e98a8d2dd925","fromNode":"8f6dcbe3983e2a9f","fromSide":"right","toNode":"be1e7de4c71fd6f8","toSide":"left"},
		{"id":"1beb23194e762c52","fromNode":"be1e7de4c71fd6f8","fromSide":"right","toNode":"9af66bedd76587c8","toSide":"left"},
		{"id":"7ccfaed7fbfdf348","fromNode":"be1e7de4c71fd6f8","fromSide":"right","toNode":"08685284d6dfd737","toSide":"left"},
		{"id":"ec664cdfffc1b119","fromNode":"be1e7de4c71fd6f8","fromSide":"right","toNode":"ef84ba81022144c6","toSide":"left"},
		{"id":"45a4e4f47f3ddea7","fromNode":"84a5bb71919aada3","fromSide":"right","toNode":"afb97154de798ee9","toSide":"left"},
		{"id":"83f7a8caf17b4bef","fromNode":"afb97154de798ee9","fromSide":"right","toNode":"b483fa800b26e40d","toSide":"left"},
		{"id":"cc6640153ab85401","fromNode":"d2cbd51c208a2802","fromSide":"bottom","toNode":"6533f4bc06304cdd","toSide":"top"},
		{"id":"4b032894747d908b","fromNode":"b483fa800b26e40d","fromSide":"right","toNode":"2fd140895dba1b48","toSide":"left"},
		{"id":"ef23564159ad5a64","fromNode":"2fd140895dba1b48","fromSide":"right","toNode":"71276d863d1cc2fa","toSide":"left"},
		{"id":"68679df493e30d7b","fromNode":"71276d863d1cc2fa","fromSide":"bottom","toNode":"58965ed13bba4963","toSide":"top"},
		{"id":"e176e4cdf4f15f9f","fromNode":"b483fa800b26e40d","fromSide":"bottom","toNode":"bce45d70e4f70f90","toSide":"top"},
		{"id":"a6d58c559b926eae","fromNode":"bce45d70e4f70f90","fromSide":"right","toNode":"df0fc993bdde92b9","toSide":"left"},
		{"id":"6c6b62079335ff3f","fromNode":"df0fc993bdde92b9","fromSide":"right","toNode":"389eaeb128a4ad7f","toSide":"left"},
		{"id":"5012b3a727df5a71","fromNode":"df0fc993bdde92b9","fromSide":"bottom","toNode":"6132f00206a729e6","toSide":"top"},
		{"id":"1e0d39162370ee04","fromNode":"6132f00206a729e6","fromSide":"right","toNode":"905af5742f6935aa","toSide":"left"},
		{"id":"c7cb37c54745411a","fromNode":"208577b0412503b9","fromSide":"right","toNode":"c3c6d04e98e35d05","toSide":"left"},
		{"id":"fd4a2c83393aca78","fromNode":"c3c6d04e98e35d05","fromSide":"right","toNode":"f93291be26bc80ef","toSide":"left"},
		{"id":"ab608d333a6ca7a8","fromNode":"f93291be26bc80ef","fromSide":"bottom","toNode":"032a9df343439315","toSide":"top"},
		{"id":"62e6cfa2c7159832","fromNode":"032a9df343439315","fromSide":"bottom","toNode":"942bcbe690059db0","toSide":"top"},
		{"id":"23a094eceb256a76","fromNode":"942bcbe690059db0","fromSide":"right","toNode":"20231de970730738","toSide":"left"},
		{"id":"eaf659e2a2f13abf","fromNode":"20231de970730738","fromSide":"right","toNode":"2ca394fd65b67097","toSide":"left"},
		{"id":"f45e03d5886400e0","fromNode":"942bcbe690059db0","fromSide":"bottom","toNode":"ffdb62c3b0d44def","toSide":"top"},
		{"id":"958ad07919ab739a","fromNode":"ffdb62c3b0d44def","fromSide":"bottom","toNode":"1e0c19a5b970a7d9","toSide":"top"},
		{"id":"9605fbc2ca99129e","fromNode":"1e0c19a5b970a7d9","fromSide":"right","toNode":"021e1e09e3ca017c","toSide":"left"},
		{"id":"180d386009c96790","fromNode":"021e1e09e3ca017c","fromSide":"right","toNode":"a8fda7e61c6011d0","toSide":"left"},
		{"id":"0ef50f7f391b64e0","fromNode":"7ee6458dc409315d","fromSide":"right","toNode":"9a7440089208618a","toSide":"left"},
		{"id":"51a45491c514e282","fromNode":"9a7440089208618a","fromSide":"right","toNode":"4629442a8d687ec0","toSide":"left"},
		{"id":"abadd3d3ac4f1c6a","fromNode":"4629442a8d687ec0","fromSide":"bottom","toNode":"48cfe9bdc85928be","toSide":"top"},
		{"id":"1024b6a71bdc1579","fromNode":"48cfe9bdc85928be","fromSide":"bottom","toNode":"6e4cf1c992703870","toSide":"top"},
		{"id":"5846fcdd2070b484","fromNode":"6e4cf1c992703870","fromSide":"bottom","toNode":"233d16982a422df6","toSide":"top"},
		{"id":"e143737a8210c617","fromNode":"233d16982a422df6","fromSide":"right","toNode":"2c10321592df20f0","toSide":"left"},
		{"id":"a55cda3d6b35d4a0","fromNode":"2c10321592df20f0","fromSide":"bottom","toNode":"9c2637b212cc93ca","toSide":"top"},
		{"id":"cd9d7bcb84622378","fromNode":"9c2637b212cc93ca","fromSide":"bottom","toNode":"780ce092f187cc94","toSide":"top"},
		{"id":"cf047bea515c28e7","fromNode":"67fe86a7b3895997","fromSide":"right","toNode":"d141b7218d54682e","toSide":"left"},
		{"id":"18def563373a15c2","fromNode":"d141b7218d54682e","fromSide":"right","toNode":"4b4ce7577e2a30f0","toSide":"left"},
		{"id":"a6ec24b13796704a","fromNode":"4b4ce7577e2a30f0","fromSide":"bottom","toNode":"61043adb880faacc","toSide":"top"},
		{"id":"e8c066475d0cb78d","fromNode":"61043adb880faacc","fromSide":"bottom","toNode":"70d95cfcbeb1b72f","toSide":"top"},
		{"id":"79e3bd922f0efb4b","fromNode":"70d95cfcbeb1b72f","fromSide":"bottom","toNode":"dea6f0fe2336aba9","toSide":"top"},
		{"id":"917a01cd350b8e0b","fromNode":"dea6f0fe2336aba9","fromSide":"bottom","toNode":"390e099aef40f149","toSide":"top"},
		{"id":"8bd6f5a9e1966eeb","fromNode":"4b4ce7577e2a30f0","fromSide":"right","toNode":"9b8fe422fcdec3e4","toSide":"left"},
		{"id":"96fe7924c0edd1e0","fromNode":"9b8fe422fcdec3e4","fromSide":"right","toNode":"f43789c38fbee61a","toSide":"left"}
	]
}