{
	"nodes":[
		{"id":"e86976dea27d4686","type":"group","x":-135,"y":1560,"width":3470,"height":1345,"label":"Методы строк, связанные с поиском и замены строк"},
		{"id":"c3f059b719d9d5ad","x":-135,"y":2961,"width":3371,"height":1135,"type":"group","label":"Методы строк, связанные с классификацией символов"},
		{"id":"c62ba76cf8eb6fc9","type":"group","x":-120,"y":222,"width":2233,"height":1245,"label":"Методы строк, связанные с конвертацией регистра"},
		{"id":"31384d8db614eed4","type":"group","x":-120,"y":-500,"width":2815,"height":592,"label":"Методы строк"},
		{"id":"105b0fd2328c5c05","type":"text","text":"Возвращает копию строки `s`, в которой все символы, имеющие верхний регистр, преобразуются в символы нижнего регистра и наоборот","x":200,"y":687,"width":250,"height":207},
		{"id":"87f0c185999e63d3","type":"text","text":"```python\ns = 'foo123#BAR#.'\nprint(s.capitalize()) # Foo123#bar#.\n```","x":500,"y":530,"width":374,"height":80},
		{"id":"ab82c813d1196df2","type":"text","text":"```python\ns = \"what's happened to ted's IBM stock?\"\nprint(s.title()) # What'S Happened To Ted'S Ibm Stock?\n```","x":500,"y":1289,"width":512,"height":80},
		{"id":"bc0ef1c1160e25ea","type":"text","text":"Методы в данной категории не изменяют исходную строку. Если нужно изменить строку `s`, то нужно написать `s = s.capitalize()`","x":1140,"y":853,"width":250,"height":177},
		{"id":"fedace1a298f96d0","type":"text","text":"Символы, не являющиеся буквами алфавита, остаются неизменными","x":200,"y":511,"width":250,"height":117},
		{"id":"d8abaafaa2c4f045","type":"text","text":"Возвращает копию строки `s`, в которой первый символ имеет верхний регистр, а все остальные символы имеют нижний регистр","x":200,"y":242,"width":250,"height":177},
		{"id":"9af883ffac1ab068","type":"text","text":"```python\ns = 'foO BaR BAZ QuX'\nprint(s.capitalize()) # Foo bar baz qux\n```","x":500,"y":291,"width":400,"height":80},
		{"id":"cc5e30553e49cece","type":"text","text":"Возвращает копию строки `s`, в которой все символы имеют верхний регистр","x":1451,"y":477,"width":250,"height":118},
		{"id":"12d2c952320ecf58","type":"text","text":"Возвращает копию строки `s`, в которой все символы имеют нижний регистр","x":1451,"y":262,"width":250,"height":117},
		{"id":"af00add3ba4984f2","type":"text","text":"Метод `upper()`","x":1140,"y":506,"width":250,"height":60},
		{"id":"e27ad37cae86bbb7","type":"text","text":"Каждый метод поддерживает необязательные аргументы `<start>` и `<stop>`","x":1826,"y":-306,"width":250,"height":147},
		{"id":"da3b18205c213d06","type":"text","text":"Как и в строковых срезах, действие методы ограничено частью исходной строки, начинающейся с позиции символа `<start>` и продолжающейся вплоть до позиции `<end>`, но не включающей её","x":2126,"y":-391,"width":250,"height":316},
		{"id":"9bf0c4df0988ddf1","type":"text","text":"Если параметр `<start>` указан, а параметр `<end>` нет, то метод применяется к части исходной строки от `<start>` до конца строки","x":2425,"y":-336,"width":250,"height":207},
		{"id":"7b7a3ac7bc52ef86","type":"text","text":"Если параметры не заданы, то подразумевается, что `<start> = 0`, `<end> = len(string)`","x":2425,"y":-75,"width":250,"height":147},
		{"id":"48373278faec0ac3","type":"text","text":"На самом деле при использовании данных методов внутри памяти компьютера создается совсем другой объект, просто он со старым названием `s`","x":1451,"y":838,"width":250,"height":207},
		{"id":"d8bfa13a1ae3e4a8","type":"text","text":"```python\ns = 'hello world'\nprint(s.upper()) # HELLO WORLD\n```","x":1760,"y":496,"width":333,"height":80},
		{"id":"cace9f1bf756ce5b","type":"text","text":"```python\ns = 'HELLO WORLD'\nprint(s.lower()) # hello world\n```","x":1760,"y":281,"width":333,"height":80},
		{"id":"373ddedf8a684a90","type":"text","text":"Метод `lower()`","x":1140,"y":291,"width":250,"height":60},
		{"id":"529f1d63cccb5e38","type":"text","text":"Метод - функция, применяемая к объекту","x":200,"y":-263,"width":250,"height":60},
		{"id":"a82207cd42e80575","type":"text","text":"Метод вызывается в виде `имя_объекта.имя_метода(параметры)`","x":480,"y":-263,"width":332,"height":60},
		{"id":"fd162abe7784d487","type":"text","text":"Поиск и замена","x":1226,"y":-263,"width":250,"height":60},
		{"id":"351d5080344a729e","type":"text","text":"Методы в этой группе используются для поиска и замены строк внутри других строк","x":1526,"y":-291,"width":250,"height":117},
		{"id":"eb69791088726b88","type":"text","text":"Методы в этой группе классифицируют строку на основе содержащихся в ней символов","x":1525,"y":-117,"width":250,"height":147},
		{"id":"806ca9b049463344","type":"text","text":"Классификация символов","x":1226,"y":-73,"width":250,"height":60},
		{"id":"5adf5b4055cd7e2a","type":"text","text":"Методы в этой группе выполняют преобразование регистра для строк","x":1526,"y":-480,"width":250,"height":117},
		{"id":"2d2101c0b214a596","type":"text","text":"Конвертация регистра","x":1226,"y":-451,"width":250,"height":60},
		{"id":"f4b4c2626c786743","type":"text","text":"Методы строкового типа данных можно разделить на три группы","x":880,"y":-276,"width":250,"height":87},
		{"id":"d60bacb6caffd5d8","type":"text","text":"Методы строк","x":-100,"y":-263,"width":250,"height":60},
		{"id":"ed02bb10eac14b4d","type":"text","text":"Метод `swapcase()`","x":-100,"y":761,"width":250,"height":60},
		{"id":"bedac9bd69adef52","type":"text","text":"```python\ns = 'foO BaR 123 BAZ QuX'\nprint(s.swapcase()) # FOo bAr 123 baz qUx\n```","x":500,"y":751,"width":419,"height":80},
		{"id":"b128c7737f071286","type":"text","text":"Возвращает копию строки `s`, в которой первый символ каждого слова переводится в верхний регистр","x":200,"y":997,"width":250,"height":147},
		{"id":"4cd3e3735dc6028f","type":"text","text":"```python\ns = 'the sun also rises'\nprint(s.title()) # The Sun Also Rises\n```","x":500,"y":1030,"width":381,"height":80},
		{"id":"3ae5af951208cdbc","type":"text","text":"Метод использует довольно простой алгоритм: он не пытается различить важные и неважные слова и не обрабатывает аббревиатуры и апострофы","x":200,"y":1210,"width":250,"height":237},
		{"id":"34a2ad27f9ac6dae","type":"text","text":"Метод `capitalize()`","x":-100,"y":300,"width":250,"height":60},
		{"id":"aeb550e4a2ca8ba2","type":"text","text":"Метод `rfind()` идентичен `find()`, за тем исключением, что он ищет первое вхождение строки `<sub>`, начиная с конца строки `s`","x":280,"y":2467,"width":250,"height":207},
		{"id":"fdf85c9da85c9f1a","type":"text","text":"Метод находит индекс первого вхождения подстроки `<sub>` в исходной строке `s`. Если строка не содержит подстроки, то метод возвращает значение `-1`. Можно использовать наравне с оператором `in`","x":669,"y":2241,"width":250,"height":292},
		{"id":"1aba9afb7cf413a9","type":"text","text":"```python\ns = 'test python @removespreadblog'\ns.endswith('test') # False\ns.endswith('@removespreadblog') # True\n```","x":940,"y":2058,"width":396,"height":106},
		{"id":"cb5d72282b0dc911","type":"text","text":"```python\ns = 'foo bar foo baz foo qux'\nprint(s.find('foo')) # 0\nprint(s.find('bar')) # 4\nprint(s.find('qu')) # 20\nprint(s.find('python')) # -1\n```","x":940,"y":2308,"width":320,"height":159},
		{"id":"84bdca33bac0395b","type":"text","text":"Метод `isalnum()`","x":-115,"y":3121,"width":250,"height":60},
		{"id":"fabd34c262b859a1","type":"text","text":"Метод `isalpha()`","x":-115,"y":3480,"width":250,"height":60},
		{"id":"ab8c4874c8cb7d14","type":"text","text":"Метод определяет, состоит ли исходная строка из буквенных символов. Возвращает `True`, если исходная строка является непустой и состоит только из буквенных символов, или `False` в противном случае","x":199,"y":3364,"width":250,"height":292},
		{"id":"912468150f7f2714","type":"text","text":"Метод определяет, заканчивается ли исходная строка `s` подстрокой `<suffix>`. Возвращает `true` или `false`","x":669,"y":2022,"width":250,"height":177},
		{"id":"c6b9aedf36a48fa8","type":"text","text":"Метод определяет, начинается ли исходная строка `s` подстрокой `<suffix>`. Возвращает `true` или `false`","x":669,"y":1838,"width":250,"height":147},
		{"id":"9a6d09476a4fe659","type":"text","text":"Метод считает количество непересекающихся вхождений подстроки `<sub>` в исходную строку `s`","x":669,"y":1614,"width":250,"height":177},
		{"id":"cc321717bc32ef11","type":"text","text":"```python\ns1 = 'ABCabc'\ns2 = 'abc123'\ns3 = ''\n\nprint(s1.isalpha()) # True\nprint(s2.isalpha()) # False\nprint(s3.isalpha()) # False\n```","x":477,"y":3405,"width":304,"height":211},
		{"id":"526f8f9aa08bfd0a","type":"text","text":"Метод `endswith()`","x":-115,"y":2081,"width":250,"height":60},
		{"id":"7498e13a6a5f7a7c","type":"text","text":"Методы `find()`, `rfind()`","x":-115,"y":2358,"width":250,"height":60},
		{"id":"ce334d791d3c509c","type":"text","text":"Синтаксис: `endswith(<suffix>, <start>, <end>)`","x":180,"y":2081,"width":449,"height":60},
		{"id":"c5cd17685dca293d","type":"text","text":"Синтаксис: `find(<sub>, <start>, <end>)`","x":180,"y":2357,"width":449,"height":60},
		{"id":"d1579d6aff54afed","type":"text","text":"Метод `count()`","x":-115,"y":1672,"width":250,"height":60},
		{"id":"32d9272c72e6e8a6","type":"text","text":"Синтаксис: `count(<sub>, <start>, <end>)`","x":180,"y":1672,"width":371,"height":60},
		{"id":"de126f7df065965f","type":"text","text":"Метод `title()`","x":-100,"y":1040,"width":250,"height":60},
		{"id":"fb94c9b9cdc3889a","type":"text","text":"Методы `index()`, `rindex()`","x":1482,"y":1668,"width":250,"height":60},
		{"id":"0da117f1c5e3a873","type":"text","text":"```python\ns = 'foo bar foo baz foo qux'\nprint(s.replace('foo', 'grault')) # grault bar grault baz grault qux\n```","x":2475,"y":2605,"width":620,"height":80},
		{"id":"3e916861238efcbb","type":"text","text":"```python\ns = 'foo bar foo baz foo qux'\nprint(s.replace('foo', 'test', 1)) # test bar foo baz foo qux\n```","x":2171,"y":2772,"width":572,"height":80},
		{"id":"4ad84db5f8a5f721","type":"text","text":"```python\ns = 'test python'\nprint(s.startwith('test')) # True\nprint(s.startwith('@removespreadblog')) # False\n```","x":940,"y":1859,"width":458,"height":106},
		{"id":"ec55d22dbd96cbbf","type":"text","text":"Метод `startswith()`","x":-115,"y":1881,"width":250,"height":60},
		{"id":"a8927c6860dffb80","type":"text","text":"Синтаксис: `startswith(<suffix>, <start>, <end>)`","x":180,"y":1881,"width":449,"height":60},
		{"id":"0c8c8c96d9b4fabd","type":"text","text":"```python\ns = 'foo goo moo'\nprint(s.count('oo')) # 3 (fOO gOO mOO)\nprint(s.count('oo', 0, 8)) # 2 (подсчет с 0 по 7 символ)\n```","x":940,"y":1649,"width":528,"height":106},
		{"id":"5096604152a1f7ed","type":"text","text":"Методы `find()` и `rfind()` являются более безопасными, чем `index()` и `rindex()`, т.к. не приводят к возникновению ошибки во время выполнения программы","x":2240,"y":1580,"width":250,"height":237},
		{"id":"2cdafc2d246dd3be","type":"text","text":"Метод возвращает копию строки `s`, у которой удалены все пробелы, стоящие в начале и в конце строки","x":1800,"y":1955,"width":250,"height":147},
		{"id":"b6b14208442f4288","type":"text","text":"Синтаксис: `replace(<old>, <new>)`","x":1800,"y":2614,"width":321,"height":60},
		{"id":"a076c0e61608ea0b","type":"text","text":"Метод может принимать третий необязательный аргумент `<count>`, который определяет количество замен","x":1835,"y":2738,"width":250,"height":147},
		{"id":"b2dd9a477c4d0ec2","type":"text","text":"```python\ns = '       @removespreadblog          '\nprint(s.strip()) # @removespreadblog\n```","x":2094,"y":1989,"width":404,"height":80},
		{"id":"79fc9b5987b26f7b","type":"text","text":"Метод возвращает копию строки `s`, у которой удалены все пробелы, стоящие в начале строки","x":1800,"y":2168,"width":250,"height":147},
		{"id":"87f78abcfc860ca3","type":"text","text":"```python\ns = '     t.me/removespreadblog'\nprint(s.lstrip()) # t.me/removespreadblog\n```","x":2094,"y":2178,"width":437,"height":128},
		{"id":"c9b8040fd6857f28","type":"text","text":"Метод возвращает копию строки `s`, у которой удалены все пробелы, стоящие в конце строки","x":1800,"y":2344,"width":250,"height":147},
		{"id":"8616406b0d5085b7","type":"text","text":"```python\ns = 't.me/removespread            '\nprint(s.rstrip()) # t.me/removespread\n```","x":2094,"y":2378,"width":381,"height":80},
		{"id":"8391c02af7e2f54d","type":"text","text":"Методы данной группы могут принимать на вход необязательный аргумент `<chars>`. Это строка, которая определяет набор символов для удаления","x":2660,"y":2139,"width":250,"height":207},
		{"id":"7f0a9b6ae5889c70","type":"text","text":"```python\ns = '-+-+abc+-+-'\n\nprint(s.strip('+-')) # abc\nprint(s.lstrip('+-')) # abc+-+-\nprint(s.rstrip('+-')) # -+-+abc\n```","x":2980,"y":2163,"width":335,"height":159},
		{"id":"d95b9287cee7dbae","type":"text","text":"Метод `index()` идентичен `find()`, за тем исключением, что он вызывает ошибку `ValueError: substring not found` во время программы, если подстрока `<sub>` не найдена","x":1800,"y":1625,"width":351,"height":147},
		{"id":"7db856b878b3c079","type":"text","text":"Метод `rindex()` идентичен методу `index()`, за тем исключением, что он ищет первое вхождение подстроки `<sub>`, начиная с конца строки `s`","x":1800,"y":1795,"width":351,"height":117},
		{"id":"9561410c1c668d64","type":"text","text":"Метод возвращает копию `s` со всеми вхождениями подстроки `<old>`, замененными на `<new>`","x":2171,"y":2571,"width":250,"height":147},
		{"id":"e5d18eeebc56475c","type":"text","text":"Метод `strip()`","x":1482,"y":1998,"width":250,"height":60},
		{"id":"1f9fdf656645e990","type":"text","text":"Метод `lstrip()`","x":1482,"y":2211,"width":250,"height":60},
		{"id":"67e518254d1ac9eb","type":"text","text":"Метод `rstrip()` ","x":1482,"y":2387,"width":250,"height":60},
		{"id":"dce88c43ec37b87b","type":"text","text":"Метод `replace()`","x":1482,"y":2614,"width":250,"height":60},
		{"id":"bf96cc5ccedfe857","type":"text","text":"Метод `islower()`","x":1482,"y":3501,"width":250,"height":60},
		{"id":"6cb3b09a5befad0a","type":"text","text":"```python\ns1 = 'TESTREMOVESPREAD'\ns2 = '123456'\n\nprint(s1.isalnum()) # True\nprint(s2.isalnum()) # True\n```","x":1112,"y":3072,"width":297,"height":159},
		{"id":"f2e00c771d69c61f","type":"text","text":"Метод возвращает значение `True` даже в том случае, когда строка состоит только из буквенных или только из цифровых символов","x":820,"y":3063,"width":250,"height":177},
		{"id":"3abe38e4b2528201","type":"text","text":"```python\ns1 = 'abc123'\ns2 = 'abc$*123'\ns3 = ''\n\nprint(s1.isalnum()) # True\nprint(s2.isalnum()) # False\nprint(s3.isalnum()) # False\n```","x":477,"y":3046,"width":304,"height":211},
		{"id":"b13918dedbef5a7e","type":"text","text":"Метод определяет, состоит ли исходная строка из буквенно-цифровых символов. Метод возвращает значение `True`, если исходная строка является непустой и состоит только из буквенно-цифровых символов, или `False` в противном случае","x":199,"y":2981,"width":250,"height":340},
		{"id":"d84f04a483fce27c","type":"text","text":"Метод `isdigit()`","x":1482,"y":3121,"width":250,"height":60},
		{"id":"5a2336b560f34956","type":"text","text":"Метод `isdigit()`","x":1482,"y":3121,"width":250,"height":60},
		{"id":"d655c15bcf25a648","type":"text","text":"```python\ns1 = '1234567'\ns2 = 'abc123'\ns3 = ''\n\nprint(s1.isdigit()) # True\nprint(s2.isdigit()) # False\nprint(s3.isdigit()) # False\n```","x":2074,"y":3046,"width":304,"height":211},
		{"id":"905e095f970a8c54","type":"text","text":"Метод определяет, состоит ли исходная строка только из цифровых символов. Метод возвращает значение `True`, если исходная строка является непустой и состоит только из цифровых символов, или `False` в противном случае","x":1800,"y":2981,"width":250,"height":340},
		{"id":"d0e1a0f63acaa1d1","type":"text","text":"Метод определяет, являются ли все буквенные символы исходной строки строчными (имеют нижний регистр). Метод возвращает значение `True`, если исходная строка имеет все строчные символы, или `False` в противном случае","x":1800,"y":3361,"width":250,"height":340},
		{"id":"47c44b1fae5cc787","type":"text","text":"```python\ns1 = 'abc'\ns2 = 'abcteST'\ns3 = 'Abc1#d'\ns4 = 'abc#abc'\n\nprint(s1.islower()) # True\nprint(s2.islower()) # False\nprint(s3.islower()) # False\nprint(s4.islower()) # True\n```","x":2074,"y":3399,"width":304,"height":264},
		{"id":"a7b9add9f517929e","type":"text","text":"Метод `islower()` игнорирует все небуквенные символы","x":2420,"y":3488,"width":250,"height":87},
		{"id":"74229715120a5154","type":"text","text":"```python\nprint('1234'.islower()) # False, т.к. нету букв\nprint('+-*/'.islower()) # False, т.к. нету букв\nprint('+-ab#@'.islower()) # True, всего две буквы\n```","x":2742,"y":3479,"width":474,"height":106},
		{"id":"97fdea374e46a4cf","type":"text","text":"Метод `isspace()`","x":-115,"y":3900,"width":250,"height":60},
		{"id":"9915b89cf344dba8","type":"text","text":"Метод определяет, состоит ли исходная строка только из пробельных символов. Метод возвращает `True`, если строка состоит только из пробельных символов, или `False` в противном случае","x":199,"y":3784,"width":250,"height":292},
		{"id":"532bc99ffd062fb5","type":"text","text":"```python\ns1 = '             '\ns2 = 'abc#2'\ns3 = ''\n\nprint(s1.isspace()) # True\nprint(s2.isspace()) # False\nprint(s3.isspace()) # False, т.к. нету пробелов\n```","x":477,"y":3825,"width":458,"height":211}
	],
	"edges":[
		{"id":"5de7aec062c4c6f0","fromNode":"d60bacb6caffd5d8","fromSide":"right","toNode":"529f1d63cccb5e38","toSide":"left"},
		{"id":"407fe42905ba5257","fromNode":"529f1d63cccb5e38","fromSide":"right","toNode":"a82207cd42e80575","toSide":"left"},
		{"id":"e9efb36c522c9d77","fromNode":"a82207cd42e80575","fromSide":"right","toNode":"f4b4c2626c786743","toSide":"left"},
		{"id":"5e0235a48ebe8172","fromNode":"f4b4c2626c786743","fromSide":"right","toNode":"2d2101c0b214a596","toSide":"left"},
		{"id":"cfb9fdd6ccd7f7e1","fromNode":"f4b4c2626c786743","fromSide":"right","toNode":"fd162abe7784d487","toSide":"left"},
		{"id":"a96a4330b83e4fe4","fromNode":"f4b4c2626c786743","fromSide":"right","toNode":"806ca9b049463344","toSide":"left"},
		{"id":"c14cdc60e7f91d6c","fromNode":"2d2101c0b214a596","fromSide":"right","toNode":"5adf5b4055cd7e2a","toSide":"left"},
		{"id":"6100744813c1c401","fromNode":"34a2ad27f9ac6dae","fromSide":"right","toNode":"d8abaafaa2c4f045","toSide":"left"},
		{"id":"7fed4a7559e3a7fd","fromNode":"d8abaafaa2c4f045","fromSide":"right","toNode":"9af883ffac1ab068","toSide":"left"},
		{"id":"af901984e2cd9c89","fromNode":"d8abaafaa2c4f045","fromSide":"bottom","toNode":"fedace1a298f96d0","toSide":"top"},
		{"id":"45955f5ae6e221eb","fromNode":"fedace1a298f96d0","fromSide":"right","toNode":"87f0c185999e63d3","toSide":"left"},
		{"id":"678ac15beb036764","fromNode":"ed02bb10eac14b4d","fromSide":"right","toNode":"105b0fd2328c5c05","toSide":"left"},
		{"id":"6c082bad82fab5ca","fromNode":"105b0fd2328c5c05","fromSide":"right","toNode":"bedac9bd69adef52","toSide":"left"},
		{"id":"b24aa49321c4191c","fromNode":"af00add3ba4984f2","fromSide":"right","toNode":"cc5e30553e49cece","toSide":"left"},
		{"id":"7c7fd2c9af6d381b","fromNode":"373ddedf8a684a90","fromSide":"right","toNode":"12d2c952320ecf58","toSide":"left"},
		{"id":"7f2cbf6ea0db0f52","fromNode":"de126f7df065965f","fromSide":"right","toNode":"b128c7737f071286","toSide":"left"},
		{"id":"05872ebbdc8344a1","fromNode":"b128c7737f071286","fromSide":"right","toNode":"4cd3e3735dc6028f","toSide":"left"},
		{"id":"04f172f0264daaf5","fromNode":"b128c7737f071286","fromSide":"bottom","toNode":"3ae5af951208cdbc","toSide":"top"},
		{"id":"02d3b91d621aeb68","fromNode":"3ae5af951208cdbc","fromSide":"right","toNode":"ab82c813d1196df2","toSide":"left"},
		{"id":"0d4654d4647c8d29","fromNode":"12d2c952320ecf58","fromSide":"right","toNode":"cace9f1bf756ce5b","toSide":"left"},
		{"id":"232ad2b8becc9f8d","fromNode":"cc5e30553e49cece","fromSide":"right","toNode":"d8bfa13a1ae3e4a8","toSide":"left"},
		{"id":"904edbdb14c08c00","fromNode":"bc0ef1c1160e25ea","fromSide":"right","toNode":"48373278faec0ac3","toSide":"left"},
		{"id":"56109adf08f2b23c","fromNode":"fd162abe7784d487","fromSide":"right","toNode":"351d5080344a729e","toSide":"left"},
		{"id":"043a35bda2f8e521","fromNode":"d1579d6aff54afed","fromSide":"right","toNode":"32d9272c72e6e8a6","toSide":"left"},
		{"id":"a6787625b43e8bf9","fromNode":"351d5080344a729e","fromSide":"right","toNode":"e27ad37cae86bbb7","toSide":"left"},
		{"id":"3d23b4cbf1b2389e","fromNode":"e27ad37cae86bbb7","fromSide":"right","toNode":"da3b18205c213d06","toSide":"left"},
		{"id":"4459dfcf1fd05128","fromNode":"da3b18205c213d06","fromSide":"right","toNode":"9bf0c4df0988ddf1","toSide":"left"},
		{"id":"1dd293b1ab9851fb","fromNode":"9bf0c4df0988ddf1","fromSide":"bottom","toNode":"7b7a3ac7bc52ef86","toSide":"top"},
		{"id":"afe04586ee0740b1","fromNode":"32d9272c72e6e8a6","fromSide":"right","toNode":"9a6d09476a4fe659","toSide":"left"},
		{"id":"fa81321b428e48bb","fromNode":"9a6d09476a4fe659","fromSide":"right","toNode":"0c8c8c96d9b4fabd","toSide":"left"},
		{"id":"81c81f23eff65306","fromNode":"ec55d22dbd96cbbf","fromSide":"right","toNode":"a8927c6860dffb80","toSide":"left"},
		{"id":"7c2de822cbb0a82e","fromNode":"a8927c6860dffb80","fromSide":"right","toNode":"c6b9aedf36a48fa8","toSide":"left"},
		{"id":"e5b18098f0ef6a88","fromNode":"c6b9aedf36a48fa8","fromSide":"right","toNode":"4ad84db5f8a5f721","toSide":"left"},
		{"id":"de92b3ec71505206","fromNode":"526f8f9aa08bfd0a","fromSide":"right","toNode":"ce334d791d3c509c","toSide":"left"},
		{"id":"21bf71aef82604fc","fromNode":"ce334d791d3c509c","fromSide":"right","toNode":"912468150f7f2714","toSide":"left"},
		{"id":"2c3fc21c2353843e","fromNode":"912468150f7f2714","fromSide":"right","toNode":"1aba9afb7cf413a9","toSide":"left"},
		{"id":"2a6dee0cee25e83c","fromNode":"7498e13a6a5f7a7c","fromSide":"right","toNode":"c5cd17685dca293d","toSide":"left"},
		{"id":"8840e1681fb79a99","fromNode":"c5cd17685dca293d","fromSide":"bottom","toNode":"aeb550e4a2ca8ba2","toSide":"top"},
		{"id":"c6a219b7a9cd8892","fromNode":"c5cd17685dca293d","fromSide":"right","toNode":"fdf85c9da85c9f1a","toSide":"left"},
		{"id":"8905a37be9e5a685","fromNode":"fdf85c9da85c9f1a","fromSide":"right","toNode":"cb5d72282b0dc911","toSide":"left"},
		{"id":"1cb4a570acb2a442","fromNode":"fb94c9b9cdc3889a","fromSide":"right","toNode":"d95b9287cee7dbae","toSide":"left"},
		{"id":"c4d44cdc93d33a9c","fromNode":"fb94c9b9cdc3889a","fromSide":"right","toNode":"7db856b878b3c079","toSide":"left"},
		{"id":"8f8b00973f55cf1c","fromNode":"d95b9287cee7dbae","fromSide":"right","toNode":"5096604152a1f7ed","toSide":"left"},
		{"id":"f1116b1fb180e015","fromNode":"7db856b878b3c079","fromSide":"right","toNode":"5096604152a1f7ed","toSide":"left"},
		{"id":"33a470f51af71d9a","fromNode":"e5d18eeebc56475c","fromSide":"right","toNode":"2cdafc2d246dd3be","toSide":"left"},
		{"id":"16989f56ad483935","fromNode":"2cdafc2d246dd3be","fromSide":"right","toNode":"b2dd9a477c4d0ec2","toSide":"left"},
		{"id":"7f377cd4471f481f","fromNode":"1f9fdf656645e990","fromSide":"right","toNode":"79fc9b5987b26f7b","toSide":"left"},
		{"id":"98e172e4e846c389","fromNode":"79fc9b5987b26f7b","fromSide":"right","toNode":"87f78abcfc860ca3","toSide":"left"},
		{"id":"b1cae3ad0c67472f","fromNode":"67e518254d1ac9eb","fromSide":"right","toNode":"c9b8040fd6857f28","toSide":"left"},
		{"id":"b9d93fc9d3d27fbd","fromNode":"c9b8040fd6857f28","fromSide":"right","toNode":"8616406b0d5085b7","toSide":"left"},
		{"id":"3467045ccc5cdabc","fromNode":"dce88c43ec37b87b","fromSide":"right","toNode":"b6b14208442f4288","toSide":"left"},
		{"id":"8bcc9333595a342a","fromNode":"b6b14208442f4288","fromSide":"right","toNode":"9561410c1c668d64","toSide":"left"},
		{"id":"2b97c265af45ce7b","fromNode":"9561410c1c668d64","fromSide":"right","toNode":"0da117f1c5e3a873","toSide":"left"},
		{"id":"aceef6e92f4b1230","fromNode":"b6b14208442f4288","fromSide":"bottom","toNode":"a076c0e61608ea0b","toSide":"top"},
		{"id":"427eb40e60d8f708","fromNode":"a076c0e61608ea0b","fromSide":"right","toNode":"3e916861238efcbb","toSide":"left"},
		{"id":"9ada0a989a520628","fromNode":"b2dd9a477c4d0ec2","fromSide":"right","toNode":"8391c02af7e2f54d","toSide":"left"},
		{"id":"05af0feb807713fe","fromNode":"87f78abcfc860ca3","fromSide":"right","toNode":"8391c02af7e2f54d","toSide":"left"},
		{"id":"7a1495aff8ad5d8f","fromNode":"8616406b0d5085b7","fromSide":"right","toNode":"8391c02af7e2f54d","toSide":"left"},
		{"id":"4d6e218cc453ed47","fromNode":"8391c02af7e2f54d","fromSide":"right","toNode":"7f0a9b6ae5889c70","toSide":"left"},
		{"id":"155eeba5c2a8e085","fromNode":"806ca9b049463344","fromSide":"right","toNode":"eb69791088726b88","toSide":"left"},
		{"id":"072c89502878fe58","fromNode":"84bdca33bac0395b","fromSide":"right","toNode":"b13918dedbef5a7e","toSide":"left"},
		{"id":"f9212857b508ef8e","fromNode":"b13918dedbef5a7e","fromSide":"right","toNode":"3abe38e4b2528201","toSide":"left"},
		{"id":"776eb7ce329cd7fc","fromNode":"3abe38e4b2528201","fromSide":"right","toNode":"f2e00c771d69c61f","toSide":"left"},
		{"id":"a39c43e59180595f","fromNode":"f2e00c771d69c61f","fromSide":"right","toNode":"6cb3b09a5befad0a","toSide":"left"},
		{"id":"fa1b01d8f490ac12","fromNode":"fabd34c262b859a1","fromSide":"right","toNode":"ab8c4874c8cb7d14","toSide":"left"},
		{"id":"44527a8921225edd","fromNode":"ab8c4874c8cb7d14","fromSide":"right","toNode":"cc321717bc32ef11","toSide":"left"},
		{"id":"8bbe9dbdaba002a7","fromNode":"d84f04a483fce27c","fromSide":"right","toNode":"905e095f970a8c54","toSide":"left"},
		{"id":"60fa0a9b4cde90ec","fromNode":"905e095f970a8c54","fromSide":"right","toNode":"d655c15bcf25a648","toSide":"left"},
		{"id":"d86e0a45eee35d0c","fromNode":"bf96cc5ccedfe857","fromSide":"right","toNode":"d0e1a0f63acaa1d1","toSide":"left"},
		{"id":"62407f04f8214207","fromNode":"d0e1a0f63acaa1d1","fromSide":"right","toNode":"47c44b1fae5cc787","toSide":"left"},
		{"id":"99e55937710ca1a1","fromNode":"47c44b1fae5cc787","fromSide":"right","toNode":"a7b9add9f517929e","toSide":"left"},
		{"id":"280cb126fbc6613b","fromNode":"a7b9add9f517929e","fromSide":"right","toNode":"74229715120a5154","toSide":"left"},
		{"id":"ef6a99743ca39291","fromNode":"97fdea374e46a4cf","fromSide":"right","toNode":"9915b89cf344dba8","toSide":"left"},
		{"id":"ffa6c82d4e02fa30","fromNode":"9915b89cf344dba8","fromSide":"right","toNode":"532bc99ffd062fb5","toSide":"left"}
	]
}