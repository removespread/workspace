{
	"nodes":[
		{"id":"9b1da9c31bbf6497","type":"group","x":1540,"y":-146,"width":3067,"height":1522,"label":"Индексы внутри массива"},
		{"id":"70607d768be21a0b","x":2183,"y":1458,"width":1839,"height":1749,"type":"group","label":"Работа со слайсом"},
		{"id":"2d9ca6bdba78112b","type":"group","x":-240,"y":1480,"width":2387,"height":1140,"label":"Срезы/Слайсы/Slice"},
		{"id":"d5fc1543171d562f","type":"group","x":-240,"y":-117,"width":1630,"height":964,"label":"Массив"},
		{"id":"51982571f7c0941b","type":"text","text":"В квадратных скобках указывается его длина, которая совместно с типом элементов, определяет тип самого массива","x":740,"y":-97,"width":250,"height":177},
		{"id":"37e423ebafbd41f0","type":"text","text":"```go\nvar a [3]int = [3]int{1, 2, 3}\nb := [3]int{1, 2, 3}\nc := [...]int{1, 2, 3}\nd := [3]int{1:12}\n```","x":730,"y":459,"width":328,"height":133},
		{"id":"1cfe0469ef4e790c","type":"text","text":"```go\narr := [7]int{1,2,3,4,5,6,7}\n\nfor i := 0; i <= len(arr); i++ {\n\tfmt.Println(arr[i])\n}\n```","x":2820,"y":159,"width":343,"height":159},
		{"id":"4da5c82cb774d622","type":"text","text":"Функция `len()` используется для возврата длины массива","x":2867,"y":360,"width":250,"height":87},
		{"id":"cfd3f937ec064803","type":"text","text":"Первый элемент - 0\nПоследний элемент - len(a) - 1","x":3163,"y":360,"width":288,"height":87},
		{"id":"6a1218270ae80ccc","type":"text","text":"Для итерации по массиву можно использовать ключевое слово `range`, при этом получать два значения - индекс и значение","x":3540,"y":150,"width":250,"height":177},
		{"id":"aef68d58338e4935","type":"text","text":"```go\nfor idx, val := range arr {\n\tfmt.Println(idx, val)\n}\n```","x":3860,"y":186,"width":358,"height":106},
		{"id":"8e445ed1287766e4","type":"text","text":"Ключевое слово `range` возвращает два объекта: индекс элемента в массиве и копию значения этого элемента. Любой из объектов может быть опущен, если он не нужен, используя символ \"_\"","x":3540,"y":418,"width":250,"height":292},
		{"id":"3de4dbce951d66db","type":"text","text":"```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tarr := [7]int{1,2,3,4,5,6,7}\n\n\tfor idx := range arr { // Вывод индекса\n\t\tfmt.Println(idx)\n\t}\n\n\tfor idx, _ := range arr { // Вывод индекса (идентичен первому варианту)\n\t\tfmt.Println(idx)\n\t}\n\n\tfor _, val := range arr { // Вывод значенгия\n\t\tfmt.Println(val)\n\t}\n}\n```","x":3900,"y":327,"width":687,"height":475},
		{"id":"dc4d1fe047de2a9d","type":"text","text":"```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tarr := [5]int{1,2,3,4,5}\n\n\tfor _, elem := range arr {\n\t\telem = 100\n\t\tfmt.Println(elem) // 100, 100, 100, 100, 100\n\t}\n\tfmt.Println(arr) // 1,2,3,4,5\n\n\tfor idx := range arr {\n\t\tarr[idx] = 100\n\t\tfmt.Println(arr[idx])\n\t} // 100, 100, 100, 100, 100\n\n\tfmt.Println(arr) // 100, 100, 100, 100, 100\n}\n```","x":3877,"y":860,"width":503,"height":496},
		{"id":"a0593790082eaf38","type":"text","text":"Массив - последовательность элементов одного типа фиксированной длины","x":-220,"y":-68,"width":250,"height":117},
		{"id":"27844628f9a99bb9","type":"text","text":"Синтаксис","x":100,"y":-39,"width":250,"height":60},
		{"id":"409bc010ceb6b535","type":"text","text":"```go\nvar arr [3]int\nfmt.Println(arr) // 0 0 0\n```","x":400,"y":-49,"width":289,"height":80},
		{"id":"2b996884b4346474","type":"text","text":"То есть, `[3]int != [5]int`","x":1040,"y":-38,"width":256,"height":60},
		{"id":"a697b95e7232ea12","type":"text","text":"Можно сразу задать значения его элементов (инициализировать его)","x":420,"y":482,"width":250,"height":87},
		{"id":"ef02e6c3ded7939e","type":"text","text":"Внутри переменной `d` используется способ присвоения по индексу, соответственно вывод будет `0 12 0 `","x":1120,"y":680,"width":250,"height":147},
		{"id":"6bfdcc9c92b4fb06","type":"text","text":"Внутри переменной `c` используется неявное определение количества элементов, из-за этого длина массива будет определена Go в зависимости от количества указанных при инициализации значений","x":1120,"y":380,"width":250,"height":292},
		{"id":"eade177e39220176","type":"text","text":"Массивы разной длины относятся к разным типам независимо от того, что хранят значения одного типа. Также не могут без приведения взаимодействовать `int64 и int32`","x":1043,"y":80,"width":250,"height":267},
		{"id":"8e4ffdd08c46958d","type":"text","text":"Индексы внутри массива","x":1560,"y":-38,"width":250,"height":60},
		{"id":"ca32904002463a41","type":"text","text":"Используется для обращения к элементам массива. Нумерация элементов массива начинается с нуля. Индекс указывается в квадратных скобках","x":1860,"y":-111,"width":250,"height":207},
		{"id":"38c39749bc520745","type":"text","text":"Через обращение по индексу можно получить значение элемента, либо изменить его","x":2180,"y":-81,"width":250,"height":147},
		{"id":"95e4498e738689d3","type":"text","text":"```go\nvar numbers [5]int{1,2,3,4,5}\n\nfmt.Println(numbers[0]) // 1\nfmt.Println(number[4]) // 5\n\nnumbers[0] = 87\n\nfmt.Println(number[0]) // 87\n```","x":2480,"y":-126,"width":320,"height":238},
		{"id":"4c56e0af796436a8","type":"text","text":"В большинстве случаев необходимо обратиться ко всем элементам массива через цикл","x":2515,"y":180,"width":250,"height":117},
		{"id":"4782657dcab865e6","type":"text","text":"`range` в качестве второго значения возвращает **копию**. Это важно понимать, если необходимо потом изменить значение внутри массива по индексу. Тогда нужно обращаться к элементам массива по индексу (второй пример)","x":3540,"y":950,"width":250,"height":316},
		{"id":"68d9d367d4819593","type":"text","text":"Функция `copy`","x":2203,"y":2900,"width":250,"height":60},
		{"id":"1e8a8b2be0ed95a1","type":"text","text":"Копирует элементы среза","x":2498,"y":2900,"width":250,"height":60},
		{"id":"254f594d5e18fa1b","type":"text","text":"```go\nfunc copy (dst, src []Type) int\n```","x":2802,"y":2900,"width":351,"height":60},
		{"id":"637f9550d8df26a2","type":"text","text":"Принимает срез-назначение и срез-источник, возвращает число скопированных элементов","x":2853,"y":3040,"width":250,"height":147},
		{"id":"670c9abe40218a61","type":"text","text":"Создание пустого слайса","x":466,"y":2040,"width":250,"height":60},
		{"id":"4f3d0d914335b347","type":"text","text":"```go\nvar a []int // [], len = 0\nvar b []int = []int{1,2,3,4} // [1,2,3,4]\nc := []int{1,2,3} // [1,2,3]\nd := []int{1:12} // [0,12]\n```","x":778,"y":2004,"width":412,"height":133},
		{"id":"e66563460ccdebde","type":"text","text":"Для гибкого создания пустых слайсов используется функция `make`","x":1260,"y":2012,"width":250,"height":117},
		{"id":"d81cfe2cd84b2dd9","type":"text","text":"При создании пустого среза создается массив какой-то длины. Через `make` создается \"правильный слайс\", т.к. под него заранее выделяется нужное количество памяти ","x":1260,"y":2160,"width":250,"height":237},
		{"id":"1a6e928ece0a988d","type":"text","text":"```go\nmake([]T, length, capacity)\n```","x":1560,"y":2041,"width":304,"height":60},
		{"id":"8254d453ff19853e","type":"text","text":"Выделяется не только нужное количество памяти, но еще и нулевые значения элементов массива","x":1260,"y":2453,"width":250,"height":147},
		{"id":"4e70caf9e1ba149c","type":"text","text":"```go\nmake([]int, 5, 5)\n// 0 0 0 0 0\n```","x":1900,"y":2031,"width":227,"height":80},
		{"id":"bf7155a4d290de3e","type":"text","text":"В качестве первого аргумента функция получает срез, в который необходимо добавить новые элементы. Второй и последующий элементы - элементы совместного со срезом типа, которые необходимо добавить в срез","x":2945,"y":2223,"width":250,"height":316},
		{"id":"95236c7a9c5f6037","type":"text","text":"Функция `append` возвращает новый слайс, содержащий ранее содержавшиеся в срезе элементы, а также и новые элементы, которые добавлялись","x":2945,"y":2589,"width":250,"height":207},
		{"id":"3165b2ed75126a17","type":"text","text":"```go\na := []int{1, 2, 3} // 1 2 3\nb := make([]int, 3, 3) // 1 2 3\nn := copy(b, a) // 3 (количество скопированных элементов)\n```","x":3195,"y":2877,"width":564,"height":106},
		{"id":"268350704fb94ec2","type":"text","text":"Срезы/Слайсы/Slice","x":-220,"y":1720,"width":250,"height":60},
		{"id":"7ce339639c0d887c","type":"text","text":"Последовательность элементов одного типа переменной длины","x":100,"y":1707,"width":250,"height":87},
		{"id":"35cb7981380d4f6b","type":"text","text":"Срез - структура данных, которая предоставляет доступ к подпоследовательности элементов базового массива. Длину массива изменить нельзя, а новые элементы добавлять в срез можно, иногда в др. языках называется \"динамическим массивом\"","x":100,"y":1820,"width":250,"height":364},
		{"id":"2b1de67f8489a2fc","type":"text","text":"Состоит из трех компонентов","x":466,"y":1721,"width":250,"height":60},
		{"id":"afcb5cb016e656ac","type":"text","text":"Размерность слайса не обязательно, т.к. она расширяемая. Более того, это другая структура","x":859,"y":2184,"width":250,"height":147},
		{"id":"42904d38515a5ba3","type":"text","text":"```go\nfunc append(slice []type, elems ...Type) []Type\n```","x":2820,"y":2140,"width":500,"height":60},
		{"id":"2ce46b6b685bbe71","type":"text","text":"Добавляет в срез новый элемент","x":2520,"y":2140,"width":250,"height":60},
		{"id":"189ff6b549a3cedd","type":"text","text":"```go\na := []int{1,2,3}\na = append(a, 4, 5)\n// a = 1, 2, 3, 4, 5\n```","x":3360,"y":2117,"width":280,"height":106},
		{"id":"d66dde0699d87468","type":"text","text":"Функция `append`","x":2203,"y":2140,"width":250,"height":60},
		{"id":"23a7f53e8e3e922f","type":"text","text":"Указатель - указывает на первый элемент массива, доступный через срез, который не обязательно совпадает с первым элементом массива","x":800,"y":1500,"width":250,"height":207},
		{"id":"d0946bad3944e734","type":"text","text":"Длина - количество элементов среза","x":800,"y":1721,"width":250,"height":60},
		{"id":"3f65a1a10a0d5310","type":"text","text":"Емкость - количество элементов между началом среза и концом базового массива","x":800,"y":1794,"width":250,"height":117},
		{"id":"8b9422a062aa4faf","type":"text","text":"Определяется через `cap()`","x":1090,"y":1823,"width":250,"height":60},
		{"id":"a7cd5aa0b7796be7","type":"text","text":"Определяется через `len()`","x":1090,"y":1721,"width":250,"height":60},
		{"id":"1b4ba2a7f2d3872f","type":"text","text":"Если значение `i` не указано, то применяется значение `0`. Если не указано значение `j`, то вместо него используется длина исходного массива","x":2677,"y":1776,"width":250,"height":207},
		{"id":"a555927d3195ad4f","type":"text","text":"Важно условие \n0 <= i <= j <= cap","x":2328,"y":1850,"width":250,"height":60},
		{"id":"a0cb90c663856613","type":"text","text":"`slice[i:j]` создает из последовательности slice новый срез, который содержит последовательности исходного среза с `i по j-1`","x":2520,"y":1478,"width":250,"height":207},
		{"id":"5bb05a8ceba67fa0","type":"text","text":"```go\nusers := [8]string{\"Bob\", \"Alice\", \"Kate\", \"Sam\", \"Tom\", \"Paul\", \"Mike\", \"Robert\"} // исходный и/или базовый массив\n\nusers1 := users[2:6] // с 3 по 6: Kate, Sam, Tom, Paul\nusers2 := users[:4] // с 1 по 4: Bob, Alice, Kate, Sam\nusers3 := users[3:] // с 4 до конца: Sam, Tom, Paul, Mike, Robert\n```","x":3020,"y":1502,"width":982,"height":159},
		{"id":"f59dccdb8a0fdcf3","type":"text","text":"Оператор среза","x":2203,"y":1551,"width":250,"height":60}
	],
	"edges":[
		{"id":"1448e3bc3e083d08","fromNode":"a0593790082eaf38","fromSide":"right","toNode":"27844628f9a99bb9","toSide":"left"},
		{"id":"eaa86d3d6253e589","fromNode":"27844628f9a99bb9","fromSide":"right","toNode":"409bc010ceb6b535","toSide":"left"},
		{"id":"6b9f7da8827f5690","fromNode":"409bc010ceb6b535","fromSide":"right","toNode":"51982571f7c0941b","toSide":"left"},
		{"id":"618e72578e7231b2","fromNode":"51982571f7c0941b","fromSide":"right","toNode":"2b996884b4346474","toSide":"left"},
		{"id":"c8bcb470112ecfe3","fromNode":"2b996884b4346474","fromSide":"bottom","toNode":"eade177e39220176","toSide":"top"},
		{"id":"91bb3086cee72855","fromNode":"409bc010ceb6b535","fromSide":"bottom","toNode":"a697b95e7232ea12","toSide":"top"},
		{"id":"1ecbc3f51ec65270","fromNode":"a697b95e7232ea12","fromSide":"right","toNode":"37e423ebafbd41f0","toSide":"left"},
		{"id":"745c23d6693f1fad","fromNode":"37e423ebafbd41f0","fromSide":"right","toNode":"6bfdcc9c92b4fb06","toSide":"left"},
		{"id":"1a7475fe6e423db7","fromNode":"37e423ebafbd41f0","fromSide":"right","toNode":"ef02e6c3ded7939e","toSide":"left"},
		{"id":"d2b0a34f41f85522","fromNode":"8e4ffdd08c46958d","fromSide":"right","toNode":"ca32904002463a41","toSide":"left"},
		{"id":"e87d24ece4e0b1fa","fromNode":"ca32904002463a41","fromSide":"right","toNode":"38c39749bc520745","toSide":"left"},
		{"id":"db1ac3bcd3e05b5a","fromNode":"38c39749bc520745","fromSide":"right","toNode":"95e4498e738689d3","toSide":"left"},
		{"id":"1aab9714c4ef4e6e","fromNode":"38c39749bc520745","fromSide":"right","toNode":"4c56e0af796436a8","toSide":"left"},
		{"id":"a7b21876a730da02","fromNode":"4c56e0af796436a8","fromSide":"right","toNode":"1cfe0469ef4e790c","toSide":"left"},
		{"id":"421c40a1fce06728","fromNode":"1cfe0469ef4e790c","fromSide":"bottom","toNode":"4da5c82cb774d622","toSide":"top"},
		{"id":"8b7800143739656b","fromNode":"4da5c82cb774d622","fromSide":"right","toNode":"cfd3f937ec064803","toSide":"left"},
		{"id":"ed2b31b8e2bc4a01","fromNode":"1cfe0469ef4e790c","fromSide":"right","toNode":"6a1218270ae80ccc","toSide":"left"},
		{"id":"01ceb24755c2d4b9","fromNode":"6a1218270ae80ccc","fromSide":"right","toNode":"aef68d58338e4935","toSide":"left"},
		{"id":"22a57043a1c6161d","fromNode":"6a1218270ae80ccc","fromSide":"bottom","toNode":"8e445ed1287766e4","toSide":"top"},
		{"id":"6195e85d0388a95f","fromNode":"8e445ed1287766e4","fromSide":"right","toNode":"3de4dbce951d66db","toSide":"left"},
		{"id":"4251976dced3f0de","fromNode":"8e445ed1287766e4","fromSide":"bottom","toNode":"4782657dcab865e6","toSide":"top"},
		{"id":"6960df97e88d382a","fromNode":"4782657dcab865e6","fromSide":"right","toNode":"dc4d1fe047de2a9d","toSide":"left"},
		{"id":"0cfb682a36b2f7d7","fromNode":"268350704fb94ec2","fromSide":"right","toNode":"7ce339639c0d887c","toSide":"left"},
		{"id":"75aae35a426febb5","fromNode":"268350704fb94ec2","fromSide":"right","toNode":"35cb7981380d4f6b","toSide":"left"},
		{"id":"06f556ee69c7d95e","fromNode":"7ce339639c0d887c","fromSide":"right","toNode":"2b1de67f8489a2fc","toSide":"left"},
		{"id":"4ddd591a013631a1","fromNode":"2b1de67f8489a2fc","fromSide":"right","toNode":"23a7f53e8e3e922f","toSide":"left"},
		{"id":"59c26dcbf026ed14","fromNode":"2b1de67f8489a2fc","fromSide":"right","toNode":"d0946bad3944e734","toSide":"left"},
		{"id":"0c34976cd804ee57","fromNode":"2b1de67f8489a2fc","fromSide":"right","toNode":"3f65a1a10a0d5310","toSide":"left"},
		{"id":"53c8b59e1868c01b","fromNode":"d0946bad3944e734","fromSide":"right","toNode":"a7cd5aa0b7796be7","toSide":"left"},
		{"id":"1a6abab409fb431f","fromNode":"3f65a1a10a0d5310","fromSide":"right","toNode":"8b9422a062aa4faf","toSide":"left"},
		{"id":"cc7d274a2e574938","fromNode":"2b1de67f8489a2fc","fromSide":"bottom","toNode":"670c9abe40218a61","toSide":"top"},
		{"id":"82706e6a76686589","fromNode":"670c9abe40218a61","fromSide":"right","toNode":"4f3d0d914335b347","toSide":"left"},
		{"id":"6930858b566eb136","fromNode":"4f3d0d914335b347","fromSide":"bottom","toNode":"afcb5cb016e656ac","toSide":"top"},
		{"id":"3a8246f7832aaf3d","fromNode":"4f3d0d914335b347","fromSide":"right","toNode":"e66563460ccdebde","toSide":"left"},
		{"id":"19bf1a8555755fc9","fromNode":"e66563460ccdebde","fromSide":"right","toNode":"1a6e928ece0a988d","toSide":"left"},
		{"id":"cae377293afad494","fromNode":"e66563460ccdebde","fromSide":"bottom","toNode":"d81cfe2cd84b2dd9","toSide":"top"},
		{"id":"c9879ac5d4a943f2","fromNode":"d81cfe2cd84b2dd9","fromSide":"bottom","toNode":"8254d453ff19853e","toSide":"top"},
		{"id":"cab7916985c99e76","fromNode":"1a6e928ece0a988d","fromSide":"right","toNode":"4e70caf9e1ba149c","toSide":"left"},
		{"id":"1d14ab769607efee","fromNode":"f59dccdb8a0fdcf3","fromSide":"right","toNode":"a0cb90c663856613","toSide":"left"},
		{"id":"965e089118e3c3d9","fromNode":"a0cb90c663856613","fromSide":"bottom","toNode":"a555927d3195ad4f","toSide":"top"},
		{"id":"1b18aef4fbd39a08","fromNode":"a0cb90c663856613","fromSide":"bottom","toNode":"1b4ba2a7f2d3872f","toSide":"top"},
		{"id":"e086acd8b302a51d","fromNode":"a0cb90c663856613","fromSide":"right","toNode":"5bb05a8ceba67fa0","toSide":"left"},
		{"id":"a8ecba9478144861","fromNode":"d66dde0699d87468","fromSide":"right","toNode":"2ce46b6b685bbe71","toSide":"left"},
		{"id":"4ceac962fd1f7563","fromNode":"2ce46b6b685bbe71","fromSide":"right","toNode":"42904d38515a5ba3","toSide":"left"},
		{"id":"304f3ebf8dbe72a4","fromNode":"42904d38515a5ba3","fromSide":"bottom","toNode":"bf7155a4d290de3e","toSide":"top"},
		{"id":"fd61b6ab0207733b","fromNode":"bf7155a4d290de3e","fromSide":"bottom","toNode":"95236c7a9c5f6037","toSide":"top"},
		{"id":"c1cea310d72b92de","fromNode":"42904d38515a5ba3","fromSide":"right","toNode":"189ff6b549a3cedd","toSide":"left"},
		{"id":"4e7368202066e35d","fromNode":"68d9d367d4819593","fromSide":"right","toNode":"1e8a8b2be0ed95a1","toSide":"left"},
		{"id":"cac5c8d3c9de558b","fromNode":"1e8a8b2be0ed95a1","fromSide":"right","toNode":"254f594d5e18fa1b","toSide":"left"},
		{"id":"0d469ce43c28db20","fromNode":"254f594d5e18fa1b","fromSide":"bottom","toNode":"637f9550d8df26a2","toSide":"top"},
		{"id":"d53f0ea98cfc098a","fromNode":"254f594d5e18fa1b","fromSide":"right","toNode":"3165b2ed75126a17","toSide":"left"}
	]
}