{
	"nodes":[
		{"id":"1861f5c27b340b98","type":"group","x":-165,"y":460,"width":1722,"height":1085,"label":"Преобразование типов данных с меньшим количеством бит"},
		{"id":"f3bf59e5019737ce","type":"group","x":-174,"y":1600,"width":1579,"height":1015,"label":"Приведение целых чисел и чисел с плавающей точкой"},
		{"id":"336b3b794388b337","type":"group","x":-162,"y":-238,"width":1702,"height":653,"label":"Приведение целочисленных типов"},
		{"id":"8615d99d9914bc6c","type":"group","x":-180,"y":2615,"width":1745,"height":474},
		{"id":"5417617625623440","x":-180,"y":3120,"width":1048,"height":500,"type":"group","label":"Конвертация в строки"},
		{"id":"4723690e816f5e71","type":"text","text":"```go\n// Создается целочисленная переменная X с значением 57\nvar x int = 57\n\n// Создается переменная Y с типом данных float64\n// К ней присваивается значение переменной X\n// Но перед присваиванием используется преобразование\nvar y float64 = float64(x)\n\n// Вывод переменной Y\nfmt.Println(y) // Результат: 57\n```","x":470,"y":1635,"width":555,"height":284},
		{"id":"ca54a38ff614c39c","type":"text","text":"Числа, конвертируемые с помощью деления","x":155,"y":2234,"width":250,"height":60},
		{"id":"8977765b4fddd855","type":"text","text":"```go\na := 5 / 2\nfmt.Println(a) // 2\n```","x":470,"y":2226,"width":249,"height":77},
		{"id":"b9fd9f57c85c314f","type":"text","text":"Если при делении используются числовые типы с плавающей точкой, тогда все остальные типы будут автоматически объявляться как числа с плавающей точкой","x":470,"y":2360,"width":250,"height":235},
		{"id":"cef1478e3aed1a32","type":"text","text":"```go\na := 5.0 / 2\nfmt.Println(a) // 2.5\n```","x":780,"y":2439,"width":269,"height":78},
		{"id":"33ca2e08daf40a2d","type":"text","text":"Строка в Golang - срез байтов, поэтому можно конвертировать байты в строку и наоборот","x":138,"y":2682,"width":250,"height":115},
		{"id":"d97339d51a5da9ad","type":"text","text":"```go\na := \"str\" // Обычная строка\nb := []byte(a) // Конвертация переменной A в побайтовый срез\nc := string(b) // Конвертация переменной B, которая является срезом обратно в строку\n\nfmt.Println(a) // str\nfmt.Println(b) // [115 116 114] - Побайтовый срез\nfmt.Println(c) // str\n```","x":470,"y":2635,"width":792,"height":209},
		{"id":"63541d1c7bfd8397","type":"text","text":"```go\na := \"строка\" // Обычная строка\nb := []rune(a) // Конвертация переменной А в рунический срез\nc := string(b) // Конвертация переменной В, которая является срезом обратно в строку\n\nfmt.Println(a) // Строка\nfmt.Println(b) // [1089 1090 1088 1086 1082 1075] - Срез рун\nfmt.Println(c) // Строка\n```","x":760,"y":2860,"width":785,"height":209},
		{"id":"84f16dab1c34df44","type":"text","text":"Тоже самое работает и со срезами типа `rune`","x":470,"y":2934,"width":250,"height":60},
		{"id":"0f77bfac6b4db5b6","type":"text","text":"Преобразование целого числа в число с плавающей точкой ничем не отличается от преобразования целого числа. Можно использовать встроенную конверсию, обернув `float64()` или `float32()` вокруг целого числа","x":155,"y":1620,"width":250,"height":314},
		{"id":"5c139486e23be351","type":"text","text":"Преобразование чисел с плавающей точкой в целые числа","x":155,"y":2020,"width":250,"height":85},
		{"id":"8b51a668f7363e09","type":"text","text":"Golang может преобразовывать `float` в `int`, но делает это с потерей точности. Синтаксис преобразования не меняется","x":470,"y":1960,"width":250,"height":205},
		{"id":"d70f2ddaa2896349","type":"text","text":"```go\nvar f float64 = 56.231\nvar i int = int(f)\n\nfmt.Println(f)\nfmt.Println(i)\n// f = 56.231\n// i = 56\n// Связано это с тем, что отбрасывается дробная часть от числа\n```","x":780,"y":1945,"width":605,"height":235},
		{"id":"5cb5656b7a522ad8","type":"text","text":"Для того, чтобы узнать максимальные значения для различных целочисленных типов, можно воспользоваться константами из пакета `math`","x":470,"y":1320,"width":250,"height":205},
		{"id":"484f386167d11b4a","type":"text","text":"```go\nfmt.Println(math.MaxInt8) // 127\nfmt.Println(math.MaxUint8) // 255\nfmt.Println(math.MaxInt16) // 32767\nfmt.Println(math.MaxUint8) // 65535\n```","x":780,"y":1358,"width":381,"height":130},
		{"id":"5c68b7df04193101","type":"text","text":"Важно помнить, что при преобразовании целых чисел может произойти потеря данных, если результат превышает допустимый диапазон для целевого типа","x":155,"y":960,"width":250,"height":205},
		{"id":"8318371874b03a5b","type":"text","text":"```go\n// Создается переменная big с типом данных int64\n// Значение переменной равно 129\nvar big int64 = 129\n\n// Создается переменная little с присваиванием значения из переменной big\n// Но перед этим происходит преобразование в int8\n// Используется следующий синтаксис: int8(название_переменной)\nvar little = int8(big)\n\n// Из-за того, что максимальное положительное значение переменной little\n// может быть число 127, а переменная big равна 129, то происходит\n// потеря данных, которая \"переворачивает\" значение\nfmt.Println(little) // -127\n// \"Переворот\" значения происходит в его знаке - если число было положительным,\n// То оно станет максимальным отрицательным и наоборот\n```","x":780,"y":868,"width":757,"height":389},
		{"id":"9652bdb71ec6b01f","type":"text","text":"Пример: `int64` -> `int8`","x":470,"y":1032,"width":250,"height":60},
		{"id":"78a6c20d01f98666","type":"text","text":"```go\n// Создается переменная big с типом данных int64.\n// Значение переменной равно 64\nvar big int64 = 64\n\n// Создается переменная little с типом данных int8 \n// Так как отсутствует явное указание значения, то переменная равна 0\nvar little int8\n\n// В переменную little идет присваивание значения из переменной big\n// Но перед присваиванием значения происходит преобразования в нужный тип данных\n// Используется следующий синтаксис: int8(название_переменной)\nvar little = int8(big)\n\nfmt.Println(little) // 64\n```","x":780,"y":480,"width":757,"height":368},
		{"id":"b5496fe6bd4bedfb","type":"text","text":"В Golang есть возможность преобразования типов данных с большим количеством бит в типы с меньшим количеством бит","x":155,"y":561,"width":250,"height":205},
		{"id":"68067136c327ddbb","type":"text","text":"Пример: `int64` -> `int8`","x":472,"y":634,"width":250,"height":60},
		{"id":"9601c1369a9d7cf8","type":"text","text":"```go\nvar a int32 = 22\nvar b uint64\n\nb = unit64(a)\n\nfmt.Println(b) // 22\nfmt.Printf(\"%T \\n\", b) // uint64\n```","x":780,"y":186,"width":364,"height":209},
		{"id":"a0ae4bc32d52117e","type":"text","text":"```go\n// Создается переменная с типом данных int8\n// Значение переменной равно 15\nvar index int8 = 15\n\n// Создается переменная с типом данных int32\n// Значение данных не указано, оно будет по умолчанию равно 0\nvar bigIndex int32\n\n// К переменной bigIndex переходит значение переменной index\n// Но так как типы данных различны, то нужно использовать следующую структуру\n// тип_данных(переменная)\nbigIndex = int32(index)\n\nfmt.Println(bigIndex) // 15\nfmt.Printf(\"T \\n\", bigIndex) // int32\n```","x":780,"y":-218,"width":740,"height":389},
		{"id":"cf340ae606ddab35","type":"text","text":"Аналогичная конвертация в другие","x":475,"y":260,"width":250,"height":60},
		{"id":"851456aac0efa56d","type":"text","text":"Аргумент `%T` в функции `Printf` - вывод типа данных","x":1220,"y":248,"width":250,"height":85},
		{"id":"db0475b164088e23","type":"text","text":"Преобразование типов","x":-142,"y":-54,"width":250,"height":60},
		{"id":"01293c6bc507c10d","type":"text","text":"В Golang преобразовываются типы достаточно просто - необходимо обернуть переменную в скобки и перед ней указать требуемый тип","x":160,"y":-126,"width":250,"height":205},
		{"id":"fc123870e9faaef7","type":"text","text":"Пример преобразования `int8` в `int32`","x":475,"y":-54,"width":250,"height":60},
		{"id":"05b76571385498d0","type":"text","text":"Конвертация строк в байты/rune и обратно","x":-142,"y":2711,"width":250,"height":60},
		{"id":"afe6cfba809632f9","type":"text","text":"Приведение целых чисел и чисел с плавающей точкой","x":-142,"y":1736,"width":250,"height":85},
		{"id":"eee77e3e253f88f2","type":"text","text":"Преобразование типов данных с меньшим количеством бит","x":-142,"y":622,"width":250,"height":85},
		{"id":"7efc34b374cd63a9","x":122,"y":3140,"width":250,"height":265,"type":"text","text":"При конвертации чисел в строки очень удобно использовать пакет `strconv`, он обладает методом `Itoa`, превращающим числовое значение (`int`) переменной в строковое (`string`)"},
		{"id":"c8095adc9cbbd3b8","x":426,"y":3221,"width":422,"height":104,"type":"text","text":"```go\na := strconv.Itoa(2020) // int to string\nfmt.Printf(\"%T \\n\", a) // type - string\nfmt.Println(a) // 2020\n```"},
		{"id":"c7e7d0696b481c64","x":-160,"y":3244,"width":250,"height":60,"type":"text","text":"Конвертация в строки"},
		{"id":"af063421104df7af","x":-160,"y":3505,"width":250,"height":60,"type":"text","text":"Конвертация bool в string"},
		{"id":"56692b49e60ef087","x":122,"y":3470,"width":348,"height":130,"type":"text","text":"```go\nvar a = true\nres := strconv.Formatbool(a)\nfmt.Println(res) // true\nfmt.Printf(\"%T\", res) // string\n```"}
	],
	"edges":[
		{"id":"66216d062d9aecd4","fromNode":"db0475b164088e23","fromSide":"right","toNode":"01293c6bc507c10d","toSide":"left"},
		{"id":"f5149fd897fd0be4","fromNode":"01293c6bc507c10d","fromSide":"right","toNode":"fc123870e9faaef7","toSide":"left"},
		{"id":"4fdbb3c727556997","fromNode":"fc123870e9faaef7","fromSide":"right","toNode":"a0ae4bc32d52117e","toSide":"left"},
		{"id":"afb3e29b9a29db00","fromNode":"fc123870e9faaef7","fromSide":"bottom","toNode":"cf340ae606ddab35","toSide":"top"},
		{"id":"1b714a3ca883b076","fromNode":"cf340ae606ddab35","fromSide":"right","toNode":"9601c1369a9d7cf8","toSide":"left"},
		{"id":"b9ad30c9cc853f03","fromNode":"9601c1369a9d7cf8","fromSide":"right","toNode":"851456aac0efa56d","toSide":"left"},
		{"id":"a449b2af25f63e1b","fromNode":"eee77e3e253f88f2","fromSide":"right","toNode":"b5496fe6bd4bedfb","toSide":"left"},
		{"id":"f77149d0d6f1feba","fromNode":"b5496fe6bd4bedfb","fromSide":"right","toNode":"68067136c327ddbb","toSide":"left"},
		{"id":"0962696c25619562","fromNode":"68067136c327ddbb","fromSide":"right","toNode":"78a6c20d01f98666","toSide":"left"},
		{"id":"7fa460e3e9b50cf3","fromNode":"b5496fe6bd4bedfb","fromSide":"bottom","toNode":"5c68b7df04193101","toSide":"top"},
		{"id":"6494510feb5f7b04","fromNode":"5c68b7df04193101","fromSide":"right","toNode":"9652bdb71ec6b01f","toSide":"left"},
		{"id":"5c64939008f1fa35","fromNode":"9652bdb71ec6b01f","fromSide":"right","toNode":"8318371874b03a5b","toSide":"left"},
		{"id":"20735adc02eb17b9","fromNode":"5c68b7df04193101","fromSide":"right","toNode":"5cb5656b7a522ad8","toSide":"left"},
		{"id":"30983f90d9c7e3a8","fromNode":"5cb5656b7a522ad8","fromSide":"right","toNode":"484f386167d11b4a","toSide":"left"},
		{"id":"83d98843632bc7ba","fromNode":"afe6cfba809632f9","fromSide":"right","toNode":"0f77bfac6b4db5b6","toSide":"left"},
		{"id":"90170808004f6736","fromNode":"0f77bfac6b4db5b6","fromSide":"right","toNode":"4723690e816f5e71","toSide":"left"},
		{"id":"404af9de773cc654","fromNode":"0f77bfac6b4db5b6","fromSide":"bottom","toNode":"5c139486e23be351","toSide":"top"},
		{"id":"695efbe490162c5c","fromNode":"5c139486e23be351","fromSide":"right","toNode":"8b51a668f7363e09","toSide":"left"},
		{"id":"fccae3ef752f115c","fromNode":"8b51a668f7363e09","fromSide":"right","toNode":"d70f2ddaa2896349","toSide":"left"},
		{"id":"58b009d9dff29ca5","fromNode":"5c139486e23be351","fromSide":"bottom","toNode":"ca54a38ff614c39c","toSide":"top"},
		{"id":"e69369700ffedb56","fromNode":"ca54a38ff614c39c","fromSide":"right","toNode":"8977765b4fddd855","toSide":"left"},
		{"id":"ea49c33f7e021167","fromNode":"ca54a38ff614c39c","fromSide":"right","toNode":"b9fd9f57c85c314f","toSide":"left"},
		{"id":"5639567616cfefab","fromNode":"b9fd9f57c85c314f","fromSide":"right","toNode":"cef1478e3aed1a32","toSide":"left"},
		{"id":"5e14286948de4e91","fromNode":"05b76571385498d0","fromSide":"right","toNode":"33ca2e08daf40a2d","toSide":"left"},
		{"id":"6a764db5ec64f4bf","fromNode":"33ca2e08daf40a2d","fromSide":"right","toNode":"d97339d51a5da9ad","toSide":"left"},
		{"id":"edd178d7cd5e4475","fromNode":"33ca2e08daf40a2d","fromSide":"right","toNode":"84f16dab1c34df44","toSide":"left"},
		{"id":"04ccf7e6e0283e37","fromNode":"84f16dab1c34df44","fromSide":"right","toNode":"63541d1c7bfd8397","toSide":"left"},
		{"id":"5758d4fdcdf01be9","fromNode":"c7e7d0696b481c64","fromSide":"right","toNode":"7efc34b374cd63a9","toSide":"left"},
		{"id":"6dc9dfb962f95c21","fromNode":"7efc34b374cd63a9","fromSide":"right","toNode":"c8095adc9cbbd3b8","toSide":"left"},
		{"id":"25e98c8b22e15d85","fromNode":"c7e7d0696b481c64","fromSide":"bottom","toNode":"af063421104df7af","toSide":"top"},
		{"id":"f1d1ab048d067ce6","fromNode":"af063421104df7af","fromSide":"right","toNode":"56692b49e60ef087","toSide":"left"}
	]
}